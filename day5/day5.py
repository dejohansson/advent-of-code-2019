
program = [3,225,1,225,6,6,1100,1,238,225,104,0,1101,11,91,225,1002,121,77,224,101,-6314,224,224,4,224,1002,223,8,223,1001,224,3,224,1,223,224,223,1102,74,62,225,1102,82,7,224,1001,224,-574,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,28,67,225,1102,42,15,225,2,196,96,224,101,-4446,224,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1101,86,57,225,1,148,69,224,1001,224,-77,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1101,82,83,225,101,87,14,224,1001,224,-178,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,1101,38,35,225,102,31,65,224,1001,224,-868,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,57,27,224,1001,224,-84,224,4,224,102,8,223,223,1001,224,7,224,1,223,224,223,1101,61,78,225,1001,40,27,224,101,-89,224,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,1008,677,226,224,1002,223,2,223,1006,224,329,101,1,223,223,8,226,677,224,102,2,223,223,1005,224,344,101,1,223,223,1107,226,677,224,102,2,223,223,1006,224,359,101,1,223,223,1007,226,226,224,102,2,223,223,1006,224,374,101,1,223,223,7,677,677,224,102,2,223,223,1005,224,389,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,226,226,224,102,2,223,223,1005,224,419,1001,223,1,223,1107,677,226,224,102,2,223,223,1005,224,434,1001,223,1,223,1108,677,677,224,102,2,223,223,1006,224,449,1001,223,1,223,7,226,677,224,102,2,223,223,1005,224,464,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,479,101,1,223,223,1007,226,677,224,1002,223,2,223,1006,224,494,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,509,101,1,223,223,1007,677,677,224,1002,223,2,223,1006,224,524,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,539,101,1,223,223,107,226,677,224,102,2,223,223,1005,224,554,1001,223,1,223,7,677,226,224,102,2,223,223,1006,224,569,1001,223,1,223,107,677,677,224,1002,223,2,223,1005,224,584,101,1,223,223,1107,677,677,224,102,2,223,223,1005,224,599,101,1,223,223,1108,226,677,224,102,2,223,223,1006,224,614,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,629,101,1,223,223,108,226,677,224,102,2,223,223,1005,224,644,1001,223,1,223,108,226,226,224,102,2,223,223,1005,224,659,101,1,223,223,1108,677,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226]

def run(p):
    ptr = 0
    while ptr <= len(p):
        instr = str(p[ptr])
        cmd = int(instr[-2:])
        modes = [0,0,0]
        for i in range(len(instr[:-2])):
            modes[-i-(4-len(instr[:-2]))] = int(instr[:-2][i])
        offset = 0

        if cmd == 1:
            p[p[ptr+3]] = get_val(p, modes[0], p[ptr+1]) + get_val(p, modes[1], p[ptr+2])
            offset = 4
        elif cmd == 2:
            p[p[ptr+3]] = get_val(p, modes[0], p[ptr+1]) * get_val(p, modes[1], p[ptr+2])
            offset = 4
        elif cmd == 3:
            p[p[ptr+1]] = int(input("Input: "))
            offset = 2
        elif cmd == 4:
            print("Output:", get_val(p, modes[0], p[ptr+1]))
            offset = 2
        elif cmd == 5:
            if get_val(p, modes[0], p[ptr+1]) != 0:
                ptr = get_val(p, modes[1], p[ptr+2])
                continue
            offset = 3
        elif cmd == 6:
            if get_val(p, modes[0], p[ptr+1]) == 0:
                ptr = get_val(p, modes[1], p[ptr+2])
                continue
            offset = 3
        elif cmd == 7:
            if get_val(p, modes[0], p[ptr+1]) < get_val(p, modes[1], p[ptr+2]):
                p[p[ptr+3]] = 1
            else:
                p[p[ptr+3]] = 0
            offset = 4
        elif cmd == 8:
            if get_val(p, modes[0], p[ptr+1]) == get_val(p, modes[1], p[ptr+2]):
                p[p[ptr+3]] = 1
            else:
                p[p[ptr+3]] = 0
            offset = 4
        elif cmd == 99:
            break
        else:
            print("Something went wrong.")
            exit(1)
        ptr += offset

def get_val(p, m, x):
    if m == 0:
        try:
            return p[x]
        except IndexError:
            print("IndexError: list index out of range:", x)
            exit(1)
    elif m == 1:
        return x

test = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]

run(list(program))
